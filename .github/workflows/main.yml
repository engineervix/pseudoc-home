name: CI/CD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deps:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

  lint:
    needs: deps
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        linter: [eslint, prettier, stylelint]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ${{ matrix.linter }}
        run: npm run ${{ matrix.linter }}

  # Creates a GitHub Release when the other two jobs succeeds, and only on pushes to tags.
  release:
    if: startsWith( github.ref, 'refs/tags/v')
    needs: [lint]
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    outputs:
      release_name: ${{ steps.release_info.outputs.release_name }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: extractions/setup-just@v2
        with:
          just-version: 1.32.0

      - name: Generate release notes
        run: just release-notes

      - name: Set release info
        id: release_info
        run: |
          TODAY="($(TZ=Africa/Lusaka date --iso))"
          echo "release_name=${{ github.ref_name }} $TODAY" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.release_info.outputs.release_name }}
          body_path: ../LATEST_RELEASE_NOTES.md
